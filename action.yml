name: 'Test ImpressCMS addon'
description: 'GitHub action that tries to help to test ImpressCMS addon'

# https://actions-cool.github.io/github-action-branding/
branding:
  icon: 'check'
  color: 'gray-dark'

inputs:
  impresscms_version:
    description: "ImpressCMS version tag to test addon with"
    default: 2.0.x
    required: false
  addon_type:
    description: "Type of ImpressCMS addon"
    required: false
  php_version:
    description: "PHP version to use"
    default: "7.4"
    required: false
  composer_version:
    description: "PHP composer version to use for test"
    default: "2"
    required: false
  post_max_size:
    description: "Max post file size"
    default: 256M
    required: false
  extra_php_extensions:
    description: "Extra comma separated extra PHP extensions list that is required by addon"
    default: ""
    required: false
  database_type:
    description: "Database type"
    default: pdo.mysql
    required: false
  database_host:
    description: "Database host"
    default: 127.0.0.1
    required: false
  database_user:
    description: "Database user"
    required: true
  database_password:
    description: "Database password"
    default: ""
    required: false
  database_name:
    description: "Database name"
    default: icms
    required: false
  database_charset:
    description: "Charset used for database"
    default: utf8
    required: false
  database_collation:
    description: "Collation used for database"
    default: utf8_general_ci
    required: false
  database_prefix:
    description: "Prefix for each ImpressCMS database table"
    default: icms_${{ github.run_id }}_${{ github.run_attempt }}
    required: false
  database_port:
    description: "Port that is used for database connection"
    default: "3306"
    required: false
  addon_requirements_update:
    description: "Set this to true to allow addon required other packages to be autoupdated on install"
    default: "false"
    required: false

runs:
  using: 'composite'

  steps:
    - name: Configuring...
      id: config
      run: |
        bash ${{ github.action_path }}/bin/icms-path.sh
        bash ${{ github.action_path }}/bin/addon-info.sh "${{ inputs.addon_type }}"
      shell: bash

    - name: Installing PHP...
      uses: shivammathur/setup-php@2.24.0
      with:
        php-version: ${{ inputs.php_version }}
        extensions: curl, gd, pdo_mysql, json, mbstring, pcre, session, ${{ inputs.extra_php_extensions }}
        ini-values: post_max_size=${{ inputs.post_max_size }}
        coverage: none
        tools: composer:v${{ inputs.composer_version }}

    - name: Creating ImpressCMS project...
      run: |
        bash ${{ github.action_path }}/bin/create-project.sh \
          "${{ steps.config.outputs.icms_path }}" \
          ${{ inputs.impresscms_version }}
      shell: bash

    - name: Installing ImpressCMS...
      id: install_icms
      uses: impresscms-dev/install-impresscms-action@v0.1.5
      with:
        database_name: ${{ inputs.database_name }}
        database_user: ${{ inputs.database_user }}
        database_password: ${{ inputs.database_password }}
        database_port: ${{ inputs.database_port }}
        database_type: ${{ inputs.database_type }}
        database_charset: ${{ inputs.database_charset }}
        database_collation: ${{ inputs.database_collation }}
        database_prefix: ${{ inputs.database_prefix }}
        database_host: ${{ inputs.database_host }}
        path: ${{ steps.config.outputs.icms_path }}

    - name: Adding local composer repo...
      run: bash ${{ github.action_path }}/bin/new-local-repo.sh "${{ steps.config.outputs.icms_path }}"
      shell: bash

    - name: Installing legacy addon...
      run: |
        bash ${{ github.action_path }}/bin/install-legacy-addon.sh \
          "${{ steps.config.outputs.addon_type }}" \
          "${{ steps.config.outputs.addon_dir }}" \
          "${{ steps.config.outputs.addon_install_path }}"
      shell: bash
      if: steps.config.outputs.addon_installation_type == 'legacy'

    - name: Installing addon with composer...
      run: |
        if [ "${{ inputs.addon_requirements_update }}" == "true" ]; then
          composer require -W ${{ steps.config.outputs.addon_name }}
        else
          composer require ${{ steps.config.outputs.addon_name }}
        fi;          
      shell: bash
      if: steps.config.outputs.addon_installation_type == 'composer'
      working-directory: ${{ steps.config.outputs.icms_path }}

    - name: Testing with PHPUnit...
      env:
        URL: http://localhost
        DB_TYPE: ${{ inputs.database_type }}
        DB_HOST: ${{ inputs.database_host }}
        DB_USER: ${{ inputs.database_user }}
        DB_PASS: ${{ inputs.database_password }}
        DB_PCONNECT: "0"
        DB_NAME: ${{ inputs.database_name }}
        DB_CHARSET: ${{ inputs.database_charset }}
        DB_COLLATION: ${{ inputs.database_collation }}
        DB_PREFIX: ${{ inputs.database_prefix }}
        DB_PORT: ${{ inputs.database_port }}
        APP_KEY: ${{ steps.install_icms.outputs.app_key }}
      run: |        
        ./bin/phpunit --testdox ${{ steps.config.outputs.addon_install_path }}/${{ steps.config.outputs.addon_test_path }}/
      shell: bash
      working-directory: ${{ steps.config.outputs.icms_path }}
      if: ${{ steps.config.outputs.addon_test_path }} != ''

    - name: Updating module...
      env:
        URL: http://localhost
        DB_TYPE: ${{ inputs.database_type }}
        DB_HOST: ${{ inputs.database_host }}
        DB_USER: ${{ inputs.database_user }}
        DB_PASS: ${{ inputs.database_password }}
        DB_PCONNECT: "0"
        DB_NAME: ${{ inputs.database_name }}
        DB_CHARSET: ${{ inputs.database_charset }}
        DB_COLLATION: ${{ inputs.database_collation }}
        DB_PREFIX: ${{ inputs.database_prefix }}
        DB_PORT: ${{ inputs.database_port }}
        APP_KEY: ${{ steps.install_icms.outputs.app_key }}
      run: php bin/console module:update ${{ steps.config.outputs.addon_dir }}
      shell: bash
      working-directory: ${{ steps.config.outputs.icms_path }}
      if: steps.config.outputs.addon_type == 'module'

    - name: Uninstalling module...
      env:
        URL: http://localhost
        DB_TYPE: ${{ inputs.database_type }}
        DB_HOST: ${{ inputs.database_host }}
        DB_USER: ${{ inputs.database_user }}
        DB_PASS: ${{ inputs.database_password }}
        DB_PCONNECT: "0"
        DB_NAME: ${{ inputs.database_name }}
        DB_CHARSET: ${{ inputs.database_charset }}
        DB_COLLATION: ${{ inputs.database_collation }}
        DB_PREFIX: ${{ inputs.database_prefix }}
        DB_PORT: ${{ inputs.database_port }}
        APP_KEY: ${{ steps.install_icms.outputs.app_key }}
      run: php bin/console module:uninstall ${{ steps.config.outputs.addon_dir }}
      shell: bash
      working-directory: ${{ steps.config.outputs.icms_path }}
      if: steps.config.outputs.addon_type == 'module'

    - name: Deleting temp folder...
      run: rm -rf "${{ steps.config.outputs.icms_path }}" || true
      shell: bash
      continue-on-error: true
